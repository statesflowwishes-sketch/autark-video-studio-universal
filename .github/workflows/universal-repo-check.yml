name: 🌟 Universal Repository Experience Check

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  documentation-structure:
    name: 📚 7-Layer Documentation Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🏗️ Verify 7-layer structure
        run: |
          echo "🔍 Checking 7-layer documentation structure..."
          
          # Layer 1: Gate
          test -f README.md || (echo "❌ Gate layer missing (README.md)" && exit 1)
          echo "✅ Gate layer found"
          
          # Layer 2: Index
          test -f docs/navigation-hub.md || (echo "❌ Index layer missing" && exit 1)
          echo "✅ Index layer found"
          
          # Layer 3: Atlas
          test -d docs/atlas || (echo "❌ Atlas layer missing" && exit 1)
          test -f docs/atlas/architektur.md || (echo "❌ Atlas architecture missing" && exit 1)
          test -f docs/atlas/konzepte.md || (echo "❌ Atlas concepts missing" && exit 1) 
          test -f docs/atlas/sicherheit.md || (echo "❌ Atlas security missing" && exit 1)
          test -f docs/atlas/glossar.md || (echo "❌ Atlas glossary missing" && exit 1)
          echo "✅ Atlas layer complete"
          
          # Layer 4: Werkzeughof
          test -f docs/tools/README.md || (echo "❌ Werkzeughof layer missing" && exit 1)
          echo "✅ Werkzeughof layer found"
          
          # Layer 5: Datenraum  
          test -f docs/data/README.md || (echo "❌ Datenraum layer missing" && exit 1)
          echo "✅ Datenraum layer found"
          
          # Layer 6: Showfloor
          test -f docs/demos/README.md || (echo "❌ Showfloor layer missing" && exit 1)
          echo "✅ Showfloor layer found"
          
          # Layer 7: Governance
          test -f docs/governance/README.md || (echo "❌ Governance layer missing" && exit 1)
          echo "✅ Governance layer found"
          
          echo "🎉 All 7 layers verified successfully!"

  universal-experience:
    name: 🎯 Universal Experience Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🕒 Check 30-second understand principle
        run: |
          # Check if README has quick overview section
          if grep -q "30 Sekunden" README.md; then
            echo "✅ 30-second principle implemented"
          else
            echo "⚠️ 30-second principle not clearly implemented"
          fi
          
      - name: 🔍 Check 5-minute find principle  
        run: |
          # Check navigation completeness
          if grep -q "navigation-hub" README.md; then
            echo "✅ 5-minute find principle implemented"
          else
            echo "⚠️ Navigation system not linked"
          fi
          
      - name: 👥 Check 60-minute contribute principle
        run: |
          # Check governance documentation
          if test -f docs/governance/README.md; then
            echo "✅ 60-minute contribute principle implemented"
          else
            echo "❌ Contribution guidelines missing"
            exit 1
          fi

  accessibility-check:
    name: ♿ Accessibility Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔍 Check accessibility features
        run: |
          echo "♿ Checking accessibility features..."
          
          # Check for alt texts in images
          if grep -r "alt=" docs/ README.md || true; then
            echo "✅ Alt texts found"
          else
            echo "ℹ️ No alt texts found - consider adding for images"
          fi
          
          # Check for ARIA labels
          if grep -r "aria-" docs/ README.md || true; then
            echo "✅ ARIA labels found"
          else
            echo "ℹ️ No ARIA labels found (optional but recommended)"
          fi
          
          echo "✅ Accessibility check completed"

  quality-metrics:
    name: 📊 Quality Metrics
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📈 Calculate documentation coverage
        run: |
          echo "📊 Calculating documentation metrics..."
          
          # Count documentation files
          DOC_FILES=$(find docs/ -name "*.md" | wc -l)
          echo "📄 Documentation files: $DOC_FILES"
          
          # Count total lines in documentation
          DOC_LINES=$(find docs/ -name "*.md" -exec wc -l {} + | tail -1 | awk '{print $1}')
          echo "📝 Documentation lines: $DOC_LINES"
          
          # Check README size (should be substantial but not overwhelming)
          README_LINES=$(wc -l < README.md)
          echo "📋 README lines: $README_LINES"
          
          if [ $README_LINES -gt 50 ] && [ $README_LINES -lt 500 ]; then
            echo "✅ README size optimal ($README_LINES lines)"
          else
            echo "⚠️ README might be too short (<50) or too long (>500) lines"
          fi
          
          echo "✅ Quality metrics calculated"